<featureType>
  <id>FeatureTypeInfoImpl--406bdaba:1452e0ca4db:-46d6</id>
  <name>antarctic_kuband_crossover_errors</name>
  <nativeName>kuband_crossover_errors</nativeName>
  <namespace>
    <id>NamespaceInfoImpl--4dd02097:1405ef0542e:-7ffd</id>
  </namespace>
  <title>kuband_crossover_errors</title>
  <keywords>
    <string>features</string>
    <string>kuband_crossover_errors</string>
  </keywords>
  <nativeCRS>GEOGCS[&quot;WGS 84&quot;, 
  DATUM[&quot;World Geodetic System 1984&quot;, 
    SPHEROID[&quot;WGS 84&quot;, 6378137.0, 298.257223563, AUTHORITY[&quot;EPSG&quot;,&quot;7030&quot;]], 
    AUTHORITY[&quot;EPSG&quot;,&quot;6326&quot;]], 
  PRIMEM[&quot;Greenwich&quot;, 0.0, AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]], 
  UNIT[&quot;degree&quot;, 0.017453292519943295], 
  AXIS[&quot;Geodetic longitude&quot;, EAST], 
  AXIS[&quot;Geodetic latitude&quot;, NORTH], 
  AUTHORITY[&quot;EPSG&quot;,&quot;4326&quot;]]</nativeCRS>
  <srs>EPSG:3031</srs>
  <nativeBoundingBox>
    <minx>-215840.82537548462</minx>
    <maxx>0.0</maxx>
    <miny>1.2152975180149341E7</miny>
    <maxy>1.236739621845986E7</maxy>
    <crs class="projected">EPSG:3031</crs>
  </nativeBoundingBox>
  <latLonBoundingBox>
    <minx>-1.017484864669901</minx>
    <maxx>0.0</maxx>
    <miny>-1.0087845375260764</miny>
    <maxy>0.0087832298385675</maxy>
    <crs>GEOGCS[&quot;WGS84(DD)&quot;, 
  DATUM[&quot;WGS84&quot;, 
    SPHEROID[&quot;WGS84&quot;, 6378137.0, 298.257223563]], 
  PRIMEM[&quot;Greenwich&quot;, 0.0], 
  UNIT[&quot;degree&quot;, 0.017453292519943295], 
  AXIS[&quot;Geodetic longitude&quot;, EAST], 
  AXIS[&quot;Geodetic latitude&quot;, NORTH]]</crs>
  </latLonBoundingBox>
  <projectionPolicy>REPROJECT_TO_DECLARED</projectionPolicy>
  <enabled>true</enabled>
  <metadata>
    <entry key="JDBC_VIRTUAL_TABLE">
      <virtualTable>
        <name>kuband_crossover_errors</name>
        <sql>WITH cx1 AS (SELECT pp1.location_id,cx.point_path_1_id,cx.id, cx.geom, lp.layer_id, lp.twtt, pp1.geom AS pp1_geom FROM kuband_crossovers cx JOIN kuband_point_paths pp1 ON cx.point_path_1_id=pp1.id JOIN kuband_segments seg ON pp1.segment_id=seg.id JOIN kuband_seasons ss1 ON pp1.season_id=ss1.id  LEFT JOIN kuband_layer_points lp ON cx.point_path_1_id=lp.point_path_id AND lp.layer_id = %layer_id%  WHERE ss1.name IN (%season_name%) AND ss1.season_group_id IN (%season_group_ids%) AND seg.name &gt; %start_seg% AND seg.name &lt; %stop_seg%), cx2 AS (SELECT cx.point_path_2_id, cx.id, lp.layer_id, lp.twtt, pp2.geom AS pp2_geom FROM kuband_crossovers cx JOIN kuband_point_paths pp2 ON cx.point_path_2_id=pp2.id JOIN kuband_segments seg ON pp2.segment_id=seg.id JOIN kuband_seasons ss2 ON pp2.season_id=ss2.id LEFT JOIN kuband_layer_points lp ON cx.point_path_2_id=lp.point_path_id AND lp.layer_id=%layer_id% WHERE ss2.name IN (%season_name%) AND ss2.season_group_id IN (%season_group_ids%) AND seg.name &gt; %start_seg% AND seg.name &lt; %stop_seg%) SELECT cx1.geom, CASE WHEN COALESCE(cx1.layer_id,cx2.layer_id) = 1 THEN ABS((ST_Z(cx1.pp1_geom) - cx1.twtt*299792458.0003452/2) - (ST_Z(cx2.pp2_geom) - cx2.twtt*299792458.0003452/2)) ELSE ABS((ST_Z(cx1.pp1_geom) - (SELECT twtt FROM kuband_layer_points WHERE layer_id=1 AND point_path_id = cx1.point_path_1_id)*299792458.0003452/2 - (cx1.twtt - (SELECT twtt FROM kuband_layer_points WHERE layer_id = 1 AND point_path_id = cx1.point_path_1_id))*299792458.0003452/2/sqrt(3.15)) - (ST_Z(cx2.pp2_geom) - (SELECT twtt FROM kuband_layer_points WHERE layer_id=1 AND point_path_id = cx2.point_path_2_id)*299792458.0003452/2 - (cx2.twtt - (SELECT twtt FROM kuband_layer_points WHERE layer_id = 1 AND point_path_id = cx2.point_path_2_id))*299792458.0003452/2/sqrt(3.15))) END AS error FROM cx1 JOIN cx2 ON cx1.id=cx2.id AND (cx1.layer_id=cx2.layer_id OR (cx1.layer_id IS NULL OR cx2.layer_id IS NULL)) WHERE cx1.location_id = %location_id%
</sql>
        <escapeSql>false</escapeSql>
        <geometry>
          <name>geom</name>
          <type>Point</type>
          <srid>4326</srid>
        </geometry>
        <parameter>
          <name>start_seg</name>
          <defaultValue>&apos;00000000_00&apos;</defaultValue>
          <regexpValidator>^[\w\d\s\&apos;\,]+$</regexpValidator>
        </parameter>
        <parameter>
          <name>stop_seg</name>
          <defaultValue>&apos;99999999_99&apos;</defaultValue>
          <regexpValidator>^[\w\d\s\&apos;\,]+$</regexpValidator>
        </parameter>
        <parameter>
          <name>layer_id</name>
          <defaultValue>2</defaultValue>
          <regexpValidator>^[\d]+$</regexpValidator>
        </parameter>
        <parameter>
          <name>season_name</name>
          <defaultValue>select name from kuband_seasons</defaultValue>
          <regexpValidator>^[\w\d\s\&apos;\,]+$</regexpValidator>
        </parameter>
        <parameter>
          <name>season_group_ids</name>
          <defaultValue>1</defaultValue>
          <regexpValidator>^[\w\d\s\&apos;\,]+$</regexpValidator>
        </parameter>
        <parameter>
          <name>location_id</name>
          <defaultValue>2</defaultValue>
          <regexpValidator>^[\d]+$</regexpValidator>
        </parameter>
      </virtualTable>
    </entry>
    <entry key="cachingEnabled">false</entry>
  </metadata>
  <store class="dataStore">
    <id>DataStoreInfoImpl--4235bd10:144fae283cd:-7eb8</id>
  </store>
  <maxFeatures>0</maxFeatures>
  <numDecimals>0</numDecimals>
</featureType>