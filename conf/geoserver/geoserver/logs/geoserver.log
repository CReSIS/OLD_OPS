2014-04-28 14:59:06,091 INFO [geoserver.global] - 
----------------------------------
- GEOSERVER_DATA_DIR: /cresis/snfs1/web/ops/geoserver
----------------------------------
2014-04-28 14:59:06,282 INFO [org.geoserver] - Loaded style 'capitals'
2014-04-28 14:59:06,393 INFO [org.geoserver] - Loaded style 'simple_roads'
2014-04-28 14:59:06,402 INFO [org.geoserver] - Loaded style 'coastline'
2014-04-28 14:59:06,409 INFO [org.geoserver] - Loaded style 'rain'
2014-04-28 14:59:06,418 INFO [org.geoserver] - Loaded style 'burg'
2014-04-28 14:59:06,428 INFO [org.geoserver] - Loaded style 'restricted'
2014-04-28 14:59:06,463 INFO [org.geoserver] - Loaded style 'raster'
2014-04-28 14:59:06,488 INFO [org.geoserver] - Loaded style 'point'
2014-04-28 14:59:06,496 INFO [org.geoserver] - Loaded style 'population'
2014-04-28 14:59:06,596 INFO [org.geoserver] - Loaded style 'cite_lakes'
2014-04-28 14:59:06,630 INFO [org.geoserver] - Loaded style 'grass'
2014-04-28 14:59:06,671 INFO [org.geoserver] - Loaded style 'poi'
2014-04-28 14:59:06,712 INFO [org.geoserver] - Loaded style 'green'
2014-04-28 14:59:06,718 INFO [org.geoserver] - Loaded style 'simple_streams'
2014-04-28 14:59:06,752 INFO [org.geoserver] - Loaded style 'polygon'
2014-04-28 14:59:06,787 INFO [org.geoserver] - Loaded style 'giant_polygon'
2014-04-28 14:59:06,810 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2014-04-28 14:59:06,835 INFO [org.geoserver] - Loaded style 'dem'
2014-04-28 14:59:06,894 INFO [org.geoserver] - Loaded style 'line'
2014-04-28 14:59:06,927 INFO [org.geoserver] - Loaded style 'pophatch'
2014-04-28 14:59:06,960 INFO [org.geoserver] - Loaded style 'tiger_roads'
2014-04-28 14:59:07,057 INFO [org.geoserver] - Loaded default workspace arctic
2014-04-28 14:59:07,083 INFO [org.geoserver] - Loaded workspace 'arctic'
2014-04-28 14:59:07,137 INFO [org.geoserver] - Loaded style 'grn_velocity'
2014-04-28 14:59:07,173 INFO [org.geoserver] - Loaded style 'grn_bedrock'
2014-04-28 14:59:07,185 INFO [org.geoserver] - Loaded style 'arctic_crossover_errors'
2014-04-28 14:59:07,194 INFO [org.geoserver] - Loaded workspace 'antarctic'
2014-04-28 14:59:07,207 INFO [org.geoserver] - Loaded style 'ant_velocity'
2014-04-28 14:59:07,209 INFO [org.geoserver] - Loaded style 'ant_bedrock'
2014-04-28 14:59:07,214 INFO [org.geoserver] - Loaded style 'antarctic_crossover_errors'
2014-04-28 14:59:08,484 INFO [org.geoserver] - Loaded store 'greenland_joughin2011_velocity_log_magnitude', enabled
2014-04-28 14:59:08,498 INFO [org.geoserver] - Loaded coverage store 'greenland_joughin2011_velocity_log_magnitude'
2014-04-28 14:59:13,019 INFO [org.geoserver] - Loaded coverage 'greenland_joughin2011_velocity_log_magnitude', enabled
2014-04-28 14:59:13,032 INFO [org.geoserver] - Loaded coverage 'greenland_joughin2011_velocity_log_magnitude'
2014-04-28 14:59:15,610 INFO [org.geoserver] - Loaded layer 'greenland_joughin2011_velocity_log_magnitude'
2014-04-28 14:59:17,081 INFO [org.geoserver] - Loaded store 'arctic_natural_90m', enabled
2014-04-28 14:59:17,081 INFO [org.geoserver] - Loaded coverage store 'arctic_natural_90m'
2014-04-28 14:59:17,096 INFO [org.geoserver] - Loaded coverage 'arctic_natural_90m', enabled
2014-04-28 14:59:17,097 INFO [org.geoserver] - Loaded coverage 'arctic_natural_90m'
2014-04-28 14:59:17,467 INFO [org.geoserver] - Loaded layer 'arctic_natural_90m'
2014-04-28 14:59:17,497 INFO [org.geoserver] - Loaded store 'greenland_bw_45m', enabled
2014-04-28 14:59:17,497 INFO [org.geoserver] - Loaded coverage store 'greenland_bw_45m'
2014-04-28 14:59:17,514 INFO [org.geoserver] - Loaded coverage 'greenland_bw_45m', enabled
2014-04-28 14:59:17,515 INFO [org.geoserver] - Loaded coverage 'greenland_bw_45m'
2014-04-28 14:59:17,836 INFO [org.geoserver] - Loaded layer 'greenland_bw_45m'
2014-04-28 14:59:17,935 INFO [org.geoserver] - Loaded store 'arctic_naturalearth', enabled
2014-04-28 14:59:17,936 INFO [org.geoserver] - Loaded coverage store 'arctic_naturalearth'
2014-04-28 14:59:17,968 INFO [org.geoserver] - Loaded coverage 'arctic_naturalearth', enabled
2014-04-28 14:59:17,969 INFO [org.geoserver] - Loaded coverage 'arctic_naturalearth'
2014-04-28 14:59:18,026 INFO [org.geoserver] - Loaded layer 'arctic_naturalearth'
2014-04-28 14:59:18,150 INFO [org.geoserver] - Loaded store 'greenland_bamberV3_bed', enabled
2014-04-28 14:59:18,150 INFO [org.geoserver] - Loaded coverage store 'greenland_bamberV3_bed'
2014-04-28 14:59:18,162 INFO [org.geoserver] - Loaded coverage 'greenland_bamberV3_bed', enabled
2014-04-28 14:59:18,163 INFO [org.geoserver] - Loaded coverage 'greenland_bamberV3_bed'
2014-04-28 14:59:18,459 INFO [org.geoserver] - Loaded layer 'greenland_bamberV3_bed'
2014-04-28 14:59:21,911 INFO [org.geoserver] - Loaded store 'greenland_coastline', enabled
2014-04-28 14:59:21,927 INFO [org.geoserver] - Loaded data store 'greenland_coastline'
2014-04-28 14:59:22,404 INFO [org.geoserver] - Loaded feature type 'greenland_coastline', enabled
2014-04-28 14:59:22,420 INFO [org.geoserver] - Loaded feature type 'greenland_coastline'
2014-04-28 14:59:22,425 INFO [org.geoserver] - Loaded layer 'greenland_coastline'
2014-04-28 14:59:22,432 INFO [org.geoserver] - Loaded store 'greenland_natural_90m', enabled
2014-04-28 14:59:22,434 INFO [org.geoserver] - Loaded coverage store 'greenland_natural_90m'
2014-04-28 14:59:22,552 INFO [org.geoserver] - Loaded coverage 'greenland_natural_90m', enabled
2014-04-28 14:59:22,553 INFO [org.geoserver] - Loaded coverage 'greenland_natural_90m'
2014-04-28 14:59:22,974 INFO [org.geoserver] - Loaded layer 'greenland_natural_90m'
2014-04-28 14:59:26,166 INFO [org.geoserver] - Loaded store 'arctic_ops', enabled
2014-04-28 14:59:26,166 INFO [org.geoserver] - Loaded data store 'arctic_ops'
2014-04-28 14:59:32,386 INFO [org.geoserver] - Loaded feature type 'arctic_snow_line_paths', enabled
2014-04-28 14:59:32,479 INFO [org.geoserver] - Loaded feature type 'arctic_ops'
2014-04-28 14:59:32,565 INFO [org.geoserver] - Loaded layer 'arctic_snow_line_paths'
2014-04-28 14:59:32,570 INFO [org.geoserver] - Loaded feature type 'arctic_snow_crossover_errors', enabled
2014-04-28 14:59:32,571 INFO [org.geoserver] - Loaded feature type 'arctic_ops'
2014-04-28 14:59:32,576 INFO [org.geoserver] - Loaded layer 'arctic_snow_crossover_errors'
2014-04-28 14:59:32,580 INFO [org.geoserver] - Loaded feature type 'arctic_accum_line_paths', enabled
2014-04-28 14:59:32,581 INFO [org.geoserver] - Loaded feature type 'arctic_ops'
2014-04-28 14:59:32,584 INFO [org.geoserver] - Loaded layer 'arctic_accum_line_paths'
2014-04-28 14:59:32,589 INFO [org.geoserver] - Loaded feature type 'arctic_rds_crossover_errors', enabled
2014-04-28 14:59:32,590 INFO [org.geoserver] - Loaded feature type 'arctic_ops'
2014-04-28 14:59:32,593 INFO [org.geoserver] - Loaded layer 'arctic_rds_crossover_errors'
2014-04-28 14:59:32,597 INFO [org.geoserver] - Loaded feature type 'arctic_rds_line_paths', enabled
2014-04-28 14:59:32,597 INFO [org.geoserver] - Loaded feature type 'arctic_ops'
2014-04-28 14:59:32,599 INFO [org.geoserver] - Loaded layer 'arctic_rds_line_paths'
2014-04-28 14:59:32,604 INFO [org.geoserver] - Loaded feature type 'arctic_accum_crossover_errors', enabled
2014-04-28 14:59:32,604 INFO [org.geoserver] - Loaded feature type 'arctic_ops'
2014-04-28 14:59:32,609 INFO [org.geoserver] - Loaded layer 'arctic_accum_crossover_errors'
2014-04-28 14:59:32,616 INFO [org.geoserver] - Loaded feature type 'arctic_kuband_crossover_errors', enabled
2014-04-28 14:59:32,616 INFO [org.geoserver] - Loaded feature type 'arctic_ops'
2014-04-28 14:59:32,619 INFO [org.geoserver] - Loaded layer 'arctic_kuband_crossover_errors'
2014-04-28 14:59:32,624 INFO [org.geoserver] - Loaded feature type 'arctic_kuband_line_paths', enabled
2014-04-28 14:59:32,624 INFO [org.geoserver] - Loaded feature type 'arctic_ops'
2014-04-28 14:59:32,630 INFO [org.geoserver] - Loaded layer 'arctic_kuband_line_paths'
2014-04-28 14:59:32,638 INFO [org.geoserver] - Loaded store 'antarctica_bedmap2_bed', enabled
2014-04-28 14:59:32,638 INFO [org.geoserver] - Loaded coverage store 'antarctica_bedmap2_bed'
2014-04-28 14:59:32,744 INFO [org.geoserver] - Loaded coverage 'antarctica_bedmap2_bed', enabled
2014-04-28 14:59:32,746 INFO [org.geoserver] - Loaded coverage 'antarctica_bedmap2_bed'
2014-04-28 14:59:32,876 INFO [org.geoserver] - Loaded layer 'antarctica_bedmap2_bed'
2014-04-28 14:59:32,995 INFO [org.geoserver] - Loaded store 'antarctica_coastline', enabled
2014-04-28 14:59:32,995 INFO [org.geoserver] - Loaded data store 'antarctica_coastline'
2014-04-28 14:59:33,101 INFO [org.geoserver] - Loaded feature type 'antarctica_coastline', enabled
2014-04-28 14:59:33,102 INFO [org.geoserver] - Loaded feature type 'antarctica_coastline'
2014-04-28 14:59:33,227 INFO [org.geoserver] - Loaded layer 'antarctica_coastline'
2014-04-28 14:59:33,259 INFO [org.geoserver] - Loaded store 'antarctic_ops', enabled
2014-04-28 14:59:33,261 INFO [org.geoserver] - Loaded data store 'antarctic_ops'
2014-04-28 14:59:33,405 INFO [org.geoserver] - Loaded feature type 'antarctic_rds_crossover_errors', enabled
2014-04-28 14:59:33,406 INFO [org.geoserver] - Loaded feature type 'antarctic_ops'
2014-04-28 14:59:33,408 INFO [org.geoserver] - Loaded layer 'antarctic_rds_crossover_errors'
2014-04-28 14:59:33,412 INFO [org.geoserver] - Loaded feature type 'antarctic_snow_crossover_errors', enabled
2014-04-28 14:59:33,412 INFO [org.geoserver] - Loaded feature type 'antarctic_ops'
2014-04-28 14:59:33,415 INFO [org.geoserver] - Loaded layer 'antarctic_snow_crossover_errors'
2014-04-28 14:59:33,440 INFO [org.geoserver] - Loaded feature type 'antarctic_kuband_line_paths', enabled
2014-04-28 14:59:33,441 INFO [org.geoserver] - Loaded feature type 'antarctic_ops'
2014-04-28 14:59:33,442 INFO [org.geoserver] - Loaded layer 'antarctic_kuband_line_paths'
2014-04-28 14:59:33,446 INFO [org.geoserver] - Loaded feature type 'antarctic_accum_crossover_errors', enabled
2014-04-28 14:59:33,447 INFO [org.geoserver] - Loaded feature type 'antarctic_ops'
2014-04-28 14:59:33,449 INFO [org.geoserver] - Loaded layer 'antarctic_accum_crossover_errors'
2014-04-28 14:59:33,454 INFO [org.geoserver] - Loaded feature type 'antarctic_rds_line_paths', enabled
2014-04-28 14:59:33,454 INFO [org.geoserver] - Loaded feature type 'antarctic_ops'
2014-04-28 14:59:33,457 INFO [org.geoserver] - Loaded layer 'antarctic_rds_line_paths'
2014-04-28 14:59:33,461 INFO [org.geoserver] - Loaded feature type 'antarctic_accum_line_paths', enabled
2014-04-28 14:59:33,462 INFO [org.geoserver] - Loaded feature type 'antarctic_ops'
2014-04-28 14:59:33,464 INFO [org.geoserver] - Loaded layer 'antarctic_accum_line_paths'
2014-04-28 14:59:33,467 INFO [org.geoserver] - Loaded feature type 'antarctic_kuband_crossover_errors', enabled
2014-04-28 14:59:33,468 INFO [org.geoserver] - Loaded feature type 'antarctic_ops'
2014-04-28 14:59:33,470 INFO [org.geoserver] - Loaded layer 'antarctic_kuband_crossover_errors'
2014-04-28 14:59:33,473 INFO [org.geoserver] - Loaded feature type 'antarctic_snow_line_paths', enabled
2014-04-28 14:59:33,474 INFO [org.geoserver] - Loaded feature type 'antarctic_ops'
2014-04-28 14:59:33,476 INFO [org.geoserver] - Loaded layer 'antarctic_snow_line_paths'
2014-04-28 14:59:33,487 INFO [org.geoserver] - Loaded store 'antarctic_naturalearth', enabled
2014-04-28 14:59:33,488 INFO [org.geoserver] - Loaded coverage store 'antarctic_naturalearth'
2014-04-28 14:59:33,619 INFO [org.geoserver] - Loaded coverage 'antarctic_naturalearth', enabled
2014-04-28 14:59:33,621 INFO [org.geoserver] - Loaded coverage 'antarctic_naturalearth'
2014-04-28 14:59:34,283 INFO [org.geoserver] - Loaded layer 'antarctic_naturalearth'
2014-04-28 14:59:34,422 INFO [org.geoserver] - Loaded store 'antarctica_lima_240m', enabled
2014-04-28 14:59:34,422 INFO [org.geoserver] - Loaded coverage store 'antarctica_lima_240m'
2014-04-28 14:59:34,434 INFO [org.geoserver] - Loaded coverage 'antarctica_lima_240m', enabled
2014-04-28 14:59:34,435 INFO [org.geoserver] - Loaded coverage 'antarctica_lima_240m'
2014-04-28 14:59:34,834 INFO [org.geoserver] - Loaded layer 'antarctica_lima_240m'
2014-04-28 14:59:34,873 INFO [org.geoserver] - Loaded store 'antarctica_measures_velocity_log_magnitude', enabled
2014-04-28 14:59:34,874 INFO [org.geoserver] - Loaded coverage store 'antarctica_measures_velocity_log_magnitude'
2014-04-28 14:59:34,902 INFO [org.geoserver] - Loaded coverage 'antarctica_measures_velocity_log_magnitude', enabled
2014-04-28 14:59:34,903 INFO [org.geoserver] - Loaded coverage 'antarctica_measures_velocity_log_magnitude'
2014-04-28 14:59:35,096 INFO [org.geoserver] - Loaded layer 'antarctica_measures_velocity_log_magnitude'
2014-04-28 14:59:35,680 INFO [storage.DefaultStorageFinder] - **********************************************************************************************************************************
2014-04-28 14:59:35,680 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /cresis/snfs1/web/ops/geoserver, using it as the default prefix. ***
2014-04-28 14:59:35,680 INFO [storage.DefaultStorageFinder] - **********************************************************************************************************************************
2014-04-28 14:59:35,681 INFO [config.XMLConfiguration] - Will look for geowebcache.xml in '/cresis/snfs1/web/ops/geoserver/gwc'
2014-04-28 14:59:36,565 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2014-04-28 14:59:36,565 INFO [gwc.layer] - GeoServer TileLayer store base directory is: /cresis/snfs1/web/ops/geoserver/gwc-layers
2014-04-28 14:59:36,566 INFO [gwc.layer] - Loading tile layers from /cresis/snfs1/web/ops/geoserver/gwc-layers
2014-04-28 14:59:36,588 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2014-04-28 14:59:36,588 INFO [layer.TileLayerDispatcher] - Configuration GeoServer Catalog Configuration contained no layers.
2014-04-28 14:59:36,588 WARN [config.XMLConfiguration] - Found no configuration file in config directory, will create one at '/cresis/snfs1/web/ops/geoserver/gwc/geowebcache.xml' from template jar:file:/var/lib/tomcat6/webapps/geoserver/WEB-INF/lib/gwc-core-1.5.1.jar!/geowebcache_empty.xml
2014-04-28 14:59:37,122 INFO [config.XMLConfiguration] - Configuration file validated fine.
2014-04-28 14:59:37,203 INFO [config.XMLConfiguration] - Initializing GridSets from /cresis/snfs1/web/ops/geoserver/gwc
2014-04-28 14:59:37,203 INFO [config.XMLConfiguration] - Initializing layers from /cresis/snfs1/web/ops/geoserver/gwc
2014-04-28 14:59:37,203 INFO [layer.TileLayerDispatcher] - Configuration /cresis/snfs1/web/ops/geoserver/gwc contained no layers.
2014-04-28 14:59:37,245 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: /cresis/snfs1/web/ops/geoserver/gwc/geowebcache-diskquota.xml
2014-04-28 14:59:37,418 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: /cresis/snfs1/web/ops/geoserver/gwc/geowebcache-diskquota.xml
2014-04-28 14:59:37,424 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2014-04-28 14:59:37,598 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2014-04-28 14:59:37,604 INFO [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 500.0 MB
2014-04-28 14:59:37,795 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2014-04-28 14:59:38,566 INFO [org.geoserver] - Loaded service 'wcs', enabled
2014-04-28 14:59:38,847 INFO [org.geoserver] - Loaded service 'wfs', enabled
2014-04-28 14:59:38,951 INFO [org.geoserver] - Loaded service 'wms', enabled
2014-04-28 14:59:38,961 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2014-04-28 14:59:39,600 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2014-04-28 14:59:39,636 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2014-04-28 14:59:39,727 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2014-04-28 14:59:39,742 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2014-04-28 14:59:40,016 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 14 paths
2014-04-28 14:59:40,314 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2014-04-28 14:59:40,314 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2014-04-28 14:59:43,516 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2014-04-28 14:59:43,517 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2014-04-28 14:59:43,517 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2014-04-28 14:59:44,106 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2014-04-28 14:59:44,107 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2014-04-28 14:59:44,120 INFO [org.geoserver] - GeoServer configuration lock is enabled
2014-04-28 14:59:44,580 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2014-04-28 14:59:44,580 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2014-04-28 14:59:49,374 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2014-04-28 14:59:49,374 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2014-04-28 14:59:49,374 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2014-04-28 14:59:56,904 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2014-04-28 14:59:56,904 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2014-04-28 14:59:57,561 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2014-04-28 14:59:57,561 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2014-04-28 15:01:26,812 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:26,813 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:26,814 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:26,812 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:26,813 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:26,809 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:26,809 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:26,813 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:26,814 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:27,112 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:27,114 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:34,214 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:34,340 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:36,012 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-4062844.5,1050106.25,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:36,023 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-2023810,1050106.25,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:36,023 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-4062844.5,30589,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:36,021 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-1004292.75,1050106.25,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:36,020 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-4062844.5,3089140.75,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:36,019 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-3043327.25,3089140.75,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:39,240 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:39,240 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:39,257 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-2023810,2069623.5,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:39,291 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:39,316 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-3043327.25,-988928.25,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:39,714 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-3043327.25,30589,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:39,893 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-4062844.5,30589,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:39,893 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-2023810,1050106.25,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:39,889 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-4062844.5,30589,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:39,889 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-4062844.5,-988928.25,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:39,889 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-1004292.75,2069623.5,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:39,888 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-4062844.5,-988928.25,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:39,888 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-4062844.5,30589,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:40,578 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:40,589 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-3043327.25,30589,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:40,692 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:40,710 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-1004292.75,1050106.25,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:40,721 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:40,722 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:40,733 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:40,745 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-3043327.25,2069623.5,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:40,746 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:40,774 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-4062844.5,1050106.25,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:40,809 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-4062844.5,3089140.75,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:40,824 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-3043327.25,3089140.75,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:40,832 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:40,844 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-4062844.5,30589,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:40,859 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:40,874 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-4062844.5,2069623.5,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:40,879 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:40,886 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:40,893 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:40,899 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:40,905 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:40,912 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-4062844.5,3089140.75,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:40,942 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:40,953 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-1004292.75,1050106.25,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,000 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-3043327.25,1050106.25,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,005 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-1004292.75,3089140.75,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,007 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-1004292.75,30589,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,007 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-3043327.25,2069623.5,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,010 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,028 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,041 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,052 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-2023810,-988928.25,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,074 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,077 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,081 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,084 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,106 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-2023810,30589,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,109 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-2023810,3089140.75,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,119 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-4062844.5,1050106.25,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,120 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-3043327.25,30589,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,128 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-1004292.75,3089140.75,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,139 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-4062844.5,1050106.25,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,146 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,153 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,157 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,165 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-3043327.25,-988928.25,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,180 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,208 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,222 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-2023810,2069623.5,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,237 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-2023810,-988928.25,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,245 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,251 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-1004292.75,-988928.25,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,255 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-1004292.75,-988928.25,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,260 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,272 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-1004292.75,3089140.75,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,284 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,333 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-2023810,30589,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,354 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,367 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-2023810,30589,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,391 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,492 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-2023810,3089140.75,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,501 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-1004292.75,2069623.5,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,514 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,527 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,559 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-3043327.25,-988928.25,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,571 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-2023810,1050106.25,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,582 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,621 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,631 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-3043327.25,30589,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,633 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-4062844.5,-988928.25,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,661 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,676 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-4062844.5,3089140.75,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:41,698 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:41,706 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-1004292.75,30589,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:42,219 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:42,234 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-3043327.25,2069623.5,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:42,257 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:42,265 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-1004292.75,2069623.5,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:42,309 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:42,315 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:42,335 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-3043327.25,3089140.75,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:42,349 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-3043327.25,1050106.25,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:42,362 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:42,372 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:42,374 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-2023810,2069623.5,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:42,402 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:42,434 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-4062844.5,30589,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:42,447 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-1004292.75,-988928.25,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:42,455 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:42,463 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-1004292.75,30589,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:42,469 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:42,478 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-4062844.5,2069623.5,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:42,513 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:42,518 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:42,523 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-2023810,-988928.25,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:42,529 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-2023810,3089140.75,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:42,549 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:42,583 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-4062844.5,2069623.5,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:42,605 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:42,618 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-1004292.75,1050106.25,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:01:42,639 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:01:42,655 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-3043327.25,1050106.25,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:28,937 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:28,943 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:28,945 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:28,950 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:28,953 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:28,959 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-2023810,30589,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:28,960 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-2023810,1050106.25,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:28,979 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-3043327.25,1050106.25,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:28,995 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-2023810,2069623.5,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:28,997 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-3043327.25,30589,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,019 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,026 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,045 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,060 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,062 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-3043327.25,30589,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,063 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,066 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,071 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-1004292.75,1050106.25,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,090 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,102 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-2023810,-988928.25,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,113 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-3043327.25,-988928.25,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,116 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-4062844.5,2069623.5,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,127 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-3043327.25,30589,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,130 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,142 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,145 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,147 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,150 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-4062844.5,-988928.25,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,157 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-1004292.75,30589,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,161 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-3043327.25,3089140.75,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,170 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-4062844.5,3089140.75,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,185 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,194 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,200 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-3043327.25,2069623.5,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,207 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,211 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,211 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-4062844.5,1050106.25,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,215 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-1004292.75,-988928.25,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,225 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-1004292.75,-988928.25,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,228 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,229 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-3043327.25,3089140.75,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,235 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-1004292.75,30589,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,245 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,259 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,264 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,275 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,280 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,298 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-1004292.75,3089140.75,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,308 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-4062844.5,2069623.5,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,309 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,312 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-4062844.5,30589,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,324 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-4062844.5,-988928.25,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,325 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-2023810,30589,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,342 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,347 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,349 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,349 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,365 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-2023810,-988928.25,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,354 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,367 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-1004292.75,-988928.25,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,405 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-1004292.75,30589,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,417 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-3043327.25,3089140.75,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,433 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,441 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,445 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-2023810,1050106.25,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,446 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,449 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,474 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,478 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-1004292.75,1050106.25,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,479 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-1004292.75,3089140.75,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,497 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,509 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-4062844.5,3089140.75,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,529 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,532 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-3043327.25,2069623.5,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,543 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,556 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-1004292.75,2069623.5,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,557 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,564 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-1004292.75,2069623.5,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,571 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-4062844.5,1050106.25,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,578 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,583 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-1004292.75,3089140.75,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,591 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,605 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-1004292.75,1050106.25,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,606 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,612 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-4062844.5,3089140.75,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,620 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-2023810,3089140.75,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,624 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-2023810,-988928.25,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,628 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,645 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,647 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,649 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-1004292.75,2069623.5,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,652 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-4062844.5,2069623.5,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,653 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,654 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-3043327.25,2069623.5,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,679 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,683 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,686 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,693 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,713 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-3043327.25,-988928.25,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,740 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-2023810,30589,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,750 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-3043327.25,1050106.25,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,754 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-2023810,2069623.5,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,763 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,770 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-4062844.5,30589,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,780 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,780 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,794 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-2023810,3089140.75,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,799 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-2023810,2069623.5,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,798 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-4062844.5,-988928.25,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,797 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,797 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,813 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-4062844.5,30589,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,822 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-4062844.5,1050106.25,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,828 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,829 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-2023810,3089140.75,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,835 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,852 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:03:29,858 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-3043327.25,1050106.25,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,879 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-2023810,1050106.25,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:03:29,888 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-3043327.25,-988928.25,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:04:03,339 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:03,341 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:03,343 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:03,343 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:03,347 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:03,447 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:05,230 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_snow_line_paths identified extends Feature(id:id,season_id:season_id,radar_id:radar_id,name:name,geom:geom,name:name)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_snow_line_paths, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:05,230 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_kuband_line_paths identified extends Feature(id:id,season_id:season_id,radar_id:radar_id,name:name,geom:geom,name:name)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_kuband_line_paths, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:05,242 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_accum_line_paths identified extends Feature(id:id,season_id:season_id,radar_id:radar_id,name:name,geom:geom,name:name)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_accum_line_paths, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:05,781 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:05,781 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:05,785 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_rds_line_paths identified extends Feature(id:id,season_id:season_id,radar_id:radar_id,name:name,geom:geom,name:name)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_rds_line_paths, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:05,948 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:05,950 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_kuband_line_paths identified extends Feature(id:id,season_id:season_id,radar_id:radar_id,name:name,geom:geom,name:name)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_kuband_line_paths, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:05,969 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:05,972 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_snow_line_paths identified extends Feature(id:id,season_id:season_id,radar_id:radar_id,name:name,geom:geom,name:name)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_snow_line_paths, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:05,995 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:05,996 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_accum_line_paths identified extends Feature(id:id,season_id:season_id,radar_id:radar_id,name:name,geom:geom,name:name)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_accum_line_paths, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:06,015 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:06,017 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_rds_line_paths identified extends Feature(id:id,season_id:season_id,radar_id:radar_id,name:name,geom:geom,name:name)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_rds_line_paths, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:07,998 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:07,999 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_kuband_line_paths identified extends Feature(id:id,season_id:season_id,radar_id:radar_id,name:name,geom:geom,name:name)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_kuband_line_paths, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:08,001 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:08,003 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_snow_line_paths identified extends Feature(id:id,season_id:season_id,radar_id:radar_id,name:name,geom:geom,name:name)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_snow_line_paths, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:08,019 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:08,021 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_accum_line_paths identified extends Feature(id:id,season_id:season_id,radar_id:radar_id,name:name,geom:geom,name:name)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_accum_line_paths, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:08,022 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:08,038 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_rds_line_paths identified extends Feature(id:id,season_id:season_id,radar_id:radar_id,name:name,geom:geom,name:name)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_rds_line_paths, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:08,106 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_rds_crossover_errors identified extends Feature(geom:geom,error:error)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_rds_crossover_errors, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:08,110 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_snow_crossover_errors identified extends Feature(geom:geom,error:error)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_snow_crossover_errors, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:08,117 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_accum_crossover_errors identified extends Feature(geom:geom,error:error)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_accum_crossover_errors, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:08,120 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_kuband_crossover_errors identified extends Feature(geom:geom,error:error)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_kuband_crossover_errors, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:08,495 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:08,511 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:08,513 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:08,519 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_snow_line_paths identified extends Feature(id:id,season_id:season_id,radar_id:radar_id,name:name,geom:geom,name:name)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_snow_line_paths, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:08,521 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:08,522 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_accum_line_paths identified extends Feature(id:id,season_id:season_id,radar_id:radar_id,name:name,geom:geom,name:name)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_accum_line_paths, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:08,519 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:08,524 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_kuband_line_paths identified extends Feature(id:id,season_id:season_id,radar_id:radar_id,name:name,geom:geom,name:name)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_kuband_line_paths, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:08,526 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:08,534 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_kuband_crossover_errors identified extends Feature(geom:geom,error:error)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_kuband_crossover_errors, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:08,537 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:08,545 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:08,546 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_rds_line_paths identified extends Feature(id:id,season_id:season_id,radar_id:radar_id,name:name,geom:geom,name:name)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_rds_line_paths, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:08,575 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_rds_crossover_errors identified extends Feature(geom:geom,error:error)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_rds_crossover_errors, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:08,579 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_accum_crossover_errors identified extends Feature(geom:geom,error:error)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_accum_crossover_errors, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:08,582 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_snow_crossover_errors identified extends Feature(geom:geom,error:error)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_snow_crossover_errors, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:10,986 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:10,994 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:11,002 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:11,011 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:11,012 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:11,013 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:11,014 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_accum_line_paths identified extends Feature(id:id,season_id:season_id,radar_id:radar_id,name:name,geom:geom,name:name)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_accum_line_paths, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:11,015 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_snow_line_paths identified extends Feature(id:id,season_id:season_id,radar_id:radar_id,name:name,geom:geom,name:name)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_snow_line_paths, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:11,016 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_kuband_line_paths identified extends Feature(id:id,season_id:season_id,radar_id:radar_id,name:name,geom:geom,name:name)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_kuband_line_paths, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:11,035 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:11,037 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:11,037 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=line]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_rds_line_paths identified extends Feature(id:id,season_id:season_id,radar_id:radar_id,name:name,geom:geom,name:name)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_rds_line_paths, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:11,042 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_kuband_crossover_errors identified extends Feature(geom:geom,error:error)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_kuband_crossover_errors, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:11,042 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_accum_crossover_errors identified extends Feature(geom:geom,error:error)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_accum_crossover_errors, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:11,054 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_rds_crossover_errors identified extends Feature(geom:geom,error:error)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_rds_crossover_errors, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:11,059 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:arctic_snow_crossover_errors identified extends Feature(geom:geom,error:error)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_snow_crossover_errors, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:12,121 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:12,121 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:12,123 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:12,124 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:12,129 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:12,226 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:12,359 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [SimpleFeatureTypeImpl http://www.opengis.net/gml:GridCoverage identified extends Feature(geom:geom,grid:grid,params:params)]
	Env = {}
	Transparent = false
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:greenland_bw_45m}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:12,362 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [SimpleFeatureTypeImpl http://www.opengis.net/gml:GridCoverage identified extends Feature(geom:geom,grid:grid,params:params)]
	Env = {}
	Transparent = false
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_natural_90m}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:12,363 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [SimpleFeatureTypeImpl http://www.opengis.net/gml:GridCoverage identified extends Feature(geom:geom,grid:grid,params:params)]
	Env = {}
	Transparent = false
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:12,374 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=grn_velocity]]
	Layers = [SimpleFeatureTypeImpl http://www.opengis.net/gml:GridCoverage identified extends Feature(geom:geom,grid:grid,params:params)]
	Env = {}
	Transparent = false
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:greenland_joughin2011_velocity_log_magnitude}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:12,405 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=grn_bedrock]]
	Layers = [SimpleFeatureTypeImpl http://www.opengis.net/gml:GridCoverage identified extends Feature(geom:geom,grid:grid,params:params)]
	Env = {}
	Transparent = false
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:greenland_bamberV3_bed}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:12,943 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=coastline]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:greenland_coastline identified extends Feature(the_geom:the_geom,NATURAL:NATURAL,NAME:NAME)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:greenland_coastline, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:14,723 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:14,728 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:14,735 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:14,736 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:14,738 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [SimpleFeatureTypeImpl http://www.opengis.net/gml:GridCoverage identified extends Feature(geom:geom,grid:grid,params:params)]
	Env = {}
	Transparent = false
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:greenland_bw_45m}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:14,740 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=coastline]]
	Layers = [SimpleFeatureTypeImpl http://ops.cresis.ku.edu/arctic:greenland_coastline identified extends Feature(the_geom:the_geom,NATURAL:NATURAL,NAME:NAME)]
	Env = {}
	Transparent = true
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:greenland_coastline, TRANSPARENT=TRUE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:14,744 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:14,745 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [SimpleFeatureTypeImpl http://www.opengis.net/gml:GridCoverage identified extends Feature(geom:geom,grid:grid,params:params)]
	Env = {}
	Transparent = false
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_natural_90m}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:14,750 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=grn_velocity]]
	Layers = [SimpleFeatureTypeImpl http://www.opengis.net/gml:GridCoverage identified extends Feature(geom:geom,grid:grid,params:params)]
	Env = {}
	Transparent = false
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:greenland_joughin2011_velocity_log_magnitude}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:14,755 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=grn_bedrock]]
	Layers = [SimpleFeatureTypeImpl http://www.opengis.net/gml:GridCoverage identified extends Feature(geom:geom,grid:grid,params:params)]
	Env = {}
	Transparent = false
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:greenland_bamberV3_bed}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:04:14,842 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:04:14,844 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Locale = null
	Format = image/gif
	Height = 20
	Width = 20
	Rules = []
	FeatureType = null
	Styles = [StyleImpl[ name=raster]]
	Layers = [SimpleFeatureTypeImpl http://www.opengis.net/gml:GridCoverage identified extends Feature(geom:geom,grid:grid,params:params)]
	Env = {}
	Transparent = false
	Scale = 1.1288923349765625E7
	Exceptions = application/vnd.ogc.se_xml
	LegendOptions = {}
	Strict = true
	Version = 1.1.1
	Request = GetLegendGraphic
	Get = false
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_xml, FORMAT=image/gif, REQUEST=GetLegendGraphic, VERSION=1.1.1, SERVICE=WMS, SCALE=11288923.349765625, LAYER=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 15:27:34,164 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,180 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-2023810,30589,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,194 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,200 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-3043327.25,1050106.25,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,208 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,215 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-3043327.25,30589,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,217 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,220 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,222 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-2023810,2069623.5,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,230 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,235 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-1004292.75,1050106.25,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,246 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-1004292.75,30589,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,266 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,276 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-2023810,1050106.25,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,310 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,312 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,334 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-2023810,2069623.5,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,359 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-2023810,30589,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,374 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,391 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,407 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,433 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-4062844.5,1050106.25,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,435 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-2023810,-988928.25,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,450 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-3043327.25,-988928.25,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,471 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,500 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,502 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,505 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,506 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,513 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-2023810,3089140.75,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,523 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-2023810,30589,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,540 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,558 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,582 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-4062844.5,1050106.25,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,586 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-3043327.25,3089140.75,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,594 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-3043327.25,-988928.25,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,601 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-4062844.5,2069623.5,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,617 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-3043327.25,2069623.5,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,618 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,628 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-1004292.75,2069623.5,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,639 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,668 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-1004292.75,1050106.25,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,707 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,716 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-3043327.25,3089140.75,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,718 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,735 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-3043327.25,2069623.5,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,762 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,767 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-1004292.75,-988928.25,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,790 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,797 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,810 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-1004292.75,3089140.75,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,810 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-3043327.25,1050106.25,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,816 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,818 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,822 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,825 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,836 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-4062844.5,1050106.25,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,844 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-2023810,-988928.25,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,855 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-3043327.25,3089140.75,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,880 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,884 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,914 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-4062844.5,2069623.5,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,931 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-3043327.25,30589,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,944 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-2023810,2069623.5,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,955 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,962 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:34,967 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-4062844.5,-988928.25,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:34,976 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-3043327.25,-988928.25,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,005 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,010 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,021 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-1004292.75,2069623.5,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,027 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,027 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,036 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,053 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-3043327.25,30589,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,062 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-3043327.25,2069623.5,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,109 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-2023810,1050106.25,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,111 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,120 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -3043327.25 : -2023810.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-3043327.25,1050106.25,-2023810, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,124 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,131 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,147 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-4062844.5,-988928.25,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,148 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-4062844.5,3089140.75,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,152 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,156 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,164 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-1004292.75,-988928.25,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,173 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-2023810,-988928.25,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,181 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,182 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,183 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,200 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,215 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-1004292.75,1050106.25,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,225 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-1004292.75,2069623.5,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,235 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-4062844.5,30589,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,237 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[30589.0 : 1050106.25, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=30589,-2023810,1050106.25,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,240 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,243 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,244 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-2023810,3089140.75,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,249 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[1050106.25 : 2069623.5, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=1050106.25,-4062844.5,2069623.5,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,251 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -2023810.0 : -1004292.75]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-2023810,3089140.75,-1004292.75, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,258 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,273 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,278 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-1004292.75,30589,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,282 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,284 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,311 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,311 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,321 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-1004292.75,3089140.75,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,323 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-4062844.5,3089140.75,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,371 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-1004292.75,-988928.25,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,377 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-4062844.5,3089140.75,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,387 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-2008445.5 : -988928.25, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-2008445.5,-4062844.5,-988928.25,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,415 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,421 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@13c8c7dc]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/jpeg, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-4062844.5,30589,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, LAYERS=arctic:arctic_naturalearth}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,443 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,463 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,466 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 15:27:35,473 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[2069623.5 : 3089140.75, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=2069623.5,-1004292.75,3089140.75,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,497 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@99254b7b]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -4062844.5 : -3043327.25]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-4062844.5,30589,-3043327.25, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_line_paths}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 15:27:35,510 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/png
	Height = 256
	Width = 256
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=arctic_crossover_errors]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = EPSG:3413
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@552cc008]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / NSIDC Sea Ice Polar Stereographic North", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", -45.0], 
  PARAMETER["Standard_Parallel_1", 70.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "South along 45 deg East"], 
  AXIS["Northing", "South along 135 deg East"], 
  AUTHORITY["EPSG","3413"]]
	Bbox = SRSEnvelope[-988928.25 : 30589.0, -1004292.75 : 15224.5]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	Transparent = true
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	Get = true
	RawKvp = {FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:3413, BBOX=-988928.25,-1004292.75,30589,15224.5, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=256, HEIGHT=256, TRANSPARENT=TRUE, LAYERS=arctic:arctic_rds_crossover_errors}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 16:02:50,607 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 16:02:53,219 INFO [geoserver.wms] - 
Request: getCapabilities
	Namespace = null
	UpdateSequence = null
	Version = 1.3.0
	Request = GetCapabilities
	Get = false
	RawKvp = {REQUEST=GetCapabilities, VERSION=1.3.0, SERVICE=WMS}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 16:02:55,959 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: javax.xml.transform.TransformerException: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: antarctic_accum_crossover_errors
	at org.geoserver.wms.capabilities.Capabilities_1_3_0_Response.write(Capabilities_1_3_0_Response.java:49)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:919)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:276)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
Caused by: javax.xml.transform.TransformerException: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: antarctic_accum_crossover_errors
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	at org.geotools.xml.transform.TransformerBase$Task.run(TransformerBase.java:300)
	at org.geotools.xml.transform.TransformerBase.transform(TransformerBase.java:133)
	at org.geotools.xml.transform.TransformerBase.transform(TransformerBase.java:112)
	at org.geoserver.wms.capabilities.Capabilities_1_3_0_Response.write(Capabilities_1_3_0_Response.java:47)
	... 81 more
Caused by: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: antarctic_accum_crossover_errors
	at org.geoserver.wms.capabilities.Capabilities_1_3_0_Transformer$Capabilities_1_3_0_Translator.doHandleLayer(Capabilities_1_3_0_Transformer.java:847)
	at org.geoserver.wms.capabilities.Capabilities_1_3_0_Transformer$Capabilities_1_3_0_Translator.handleLayerTree(Capabilities_1_3_0_Transformer.java:800)
	at org.geoserver.wms.capabilities.Capabilities_1_3_0_Transformer$Capabilities_1_3_0_Translator.handleLayers(Capabilities_1_3_0_Transformer.java:680)
	at org.geoserver.wms.capabilities.Capabilities_1_3_0_Transformer$Capabilities_1_3_0_Translator.handleCapability(Capabilities_1_3_0_Transformer.java:431)
	at org.geoserver.wms.capabilities.Capabilities_1_3_0_Transformer$Capabilities_1_3_0_Translator.encode(Capabilities_1_3_0_Transformer.java:264)
	at org.geotools.xml.transform.TransformerBase$XMLReaderSupport.parse(TransformerBase.java:1026)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(Unknown Source)
	... 87 more
Caused by: java.lang.RuntimeException: Unexpected error obtaining bounding box for layer antarctic_accum_crossover_errors
	at org.geoserver.wms.capabilities.Capabilities_1_3_0_Transformer$Capabilities_1_3_0_Translator.handleLayer(Capabilities_1_3_0_Transformer.java:911)
	at org.geoserver.wms.capabilities.Capabilities_1_3_0_Transformer$Capabilities_1_3_0_Translator.doHandleLayer(Capabilities_1_3_0_Transformer.java:840)
	... 93 more
Caused by: java.lang.NullPointerException: Unable to transform referenced envelope, crs has not yet been provided.
	at org.geotools.geometry.jts.ReferencedEnvelope.transform(ReferencedEnvelope.java:658)
	at org.geotools.geometry.jts.ReferencedEnvelope.transform(ReferencedEnvelope.java:624)
	at org.geoserver.catalog.impl.ResourceInfoImpl.boundingBox(ResourceInfoImpl.java:225)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:145)
	at com.sun.proxy.$Proxy14.boundingBox(Unknown Source)
	at org.geoserver.wms.capabilities.Capabilities_1_3_0_Transformer$Capabilities_1_3_0_Translator.handleLayer(Capabilities_1_3_0_Transformer.java:909)
	... 94 more
2014-04-28 16:02:58,647 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 16:02:58,650 INFO [geoserver.wms] - 
Request: getCapabilities
	Namespace = null
	UpdateSequence = null
	Version = 1.1.1
	Request = GetCapabilities
	Get = false
	RawKvp = {REQUEST=GetCapabilities, VERSION=1.1.1, SERVICE=WMS}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 16:02:58,995 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: javax.xml.transform.TransformerException: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: antarctic_accum_crossover_errors
	at org.geoserver.wms.capabilities.GetCapabilitiesResponse.write(GetCapabilitiesResponse.java:115)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:919)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:276)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
Caused by: javax.xml.transform.TransformerException: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: antarctic_accum_crossover_errors
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	at org.geotools.xml.transform.TransformerBase$Task.run(TransformerBase.java:300)
	at org.geotools.xml.transform.TransformerBase.transform(TransformerBase.java:133)
	at org.geotools.xml.transform.TransformerBase.transform(TransformerBase.java:112)
	at org.geoserver.wms.capabilities.GetCapabilitiesResponse.write(GetCapabilitiesResponse.java:113)
	... 81 more
Caused by: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: antarctic_accum_crossover_errors
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayerTree(GetCapabilitiesTransformer.java:792)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayers(GetCapabilitiesTransformer.java:669)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleCapability(GetCapabilitiesTransformer.java:424)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.encode(GetCapabilitiesTransformer.java:288)
	at org.geotools.xml.transform.TransformerBase$XMLReaderSupport.parse(TransformerBase.java:1026)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(Unknown Source)
	... 87 more
Caused by: java.lang.RuntimeException: Unexpected error obtaining bounding box for layer antarctic_accum_crossover_errors
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayer(GetCapabilitiesTransformer.java:866)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayerTree(GetCapabilitiesTransformer.java:781)
	... 92 more
Caused by: java.lang.NullPointerException: Unable to transform referenced envelope, crs has not yet been provided.
	at org.geotools.geometry.jts.ReferencedEnvelope.transform(ReferencedEnvelope.java:658)
	at org.geotools.geometry.jts.ReferencedEnvelope.transform(ReferencedEnvelope.java:624)
	at org.geoserver.catalog.impl.ResourceInfoImpl.boundingBox(ResourceInfoImpl.java:225)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:145)
	at com.sun.proxy.$Proxy14.boundingBox(Unknown Source)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayer(GetCapabilitiesTransformer.java:864)
	... 93 more
2014-04-28 16:03:01,448 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 16:03:01,451 INFO [geoserver.wms] - 
Request: getCapabilities
	Namespace = null
	UpdateSequence = null
	Version = 1.1.1
	Request = GetCapabilities
	Get = false
	RawKvp = {REQUEST=GetCapabilities, VERSION=1.1.0, SERVICE=WMS}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 16:03:01,601 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: javax.xml.transform.TransformerException: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: antarctic_accum_crossover_errors
	at org.geoserver.wms.capabilities.GetCapabilitiesResponse.write(GetCapabilitiesResponse.java:115)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:919)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:276)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
Caused by: javax.xml.transform.TransformerException: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: antarctic_accum_crossover_errors
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	at org.geotools.xml.transform.TransformerBase$Task.run(TransformerBase.java:300)
	at org.geotools.xml.transform.TransformerBase.transform(TransformerBase.java:133)
	at org.geotools.xml.transform.TransformerBase.transform(TransformerBase.java:112)
	at org.geoserver.wms.capabilities.GetCapabilitiesResponse.write(GetCapabilitiesResponse.java:113)
	... 81 more
Caused by: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: antarctic_accum_crossover_errors
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayerTree(GetCapabilitiesTransformer.java:792)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayers(GetCapabilitiesTransformer.java:669)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleCapability(GetCapabilitiesTransformer.java:424)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.encode(GetCapabilitiesTransformer.java:288)
	at org.geotools.xml.transform.TransformerBase$XMLReaderSupport.parse(TransformerBase.java:1026)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(Unknown Source)
	... 87 more
Caused by: java.lang.RuntimeException: Unexpected error obtaining bounding box for layer antarctic_accum_crossover_errors
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayer(GetCapabilitiesTransformer.java:866)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayerTree(GetCapabilitiesTransformer.java:781)
	... 92 more
Caused by: java.lang.NullPointerException: Unable to transform referenced envelope, crs has not yet been provided.
	at org.geotools.geometry.jts.ReferencedEnvelope.transform(ReferencedEnvelope.java:658)
	at org.geotools.geometry.jts.ReferencedEnvelope.transform(ReferencedEnvelope.java:624)
	at org.geoserver.catalog.impl.ResourceInfoImpl.boundingBox(ResourceInfoImpl.java:225)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:145)
	at com.sun.proxy.$Proxy14.boundingBox(Unknown Source)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayer(GetCapabilitiesTransformer.java:864)
	... 93 more
2014-04-28 16:03:04,005 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 16:03:04,007 INFO [geoserver.wms] - 
Request: capabilities
	Namespace = null
	UpdateSequence = null
	Version = 1.1.1
	Request = capabilities
	Get = false
	RawKvp = {REQUEST=capabilities, WMTVER=1.0.0}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 16:03:04,209 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: javax.xml.transform.TransformerException: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: antarctic_accum_crossover_errors
	at org.geoserver.wms.capabilities.GetCapabilitiesResponse.write(GetCapabilitiesResponse.java:115)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:919)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:276)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
Caused by: javax.xml.transform.TransformerException: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: antarctic_accum_crossover_errors
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	at org.geotools.xml.transform.TransformerBase$Task.run(TransformerBase.java:300)
	at org.geotools.xml.transform.TransformerBase.transform(TransformerBase.java:133)
	at org.geotools.xml.transform.TransformerBase.transform(TransformerBase.java:112)
	at org.geoserver.wms.capabilities.GetCapabilitiesResponse.write(GetCapabilitiesResponse.java:113)
	... 81 more
Caused by: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: antarctic_accum_crossover_errors
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayerTree(GetCapabilitiesTransformer.java:792)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayers(GetCapabilitiesTransformer.java:669)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleCapability(GetCapabilitiesTransformer.java:424)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.encode(GetCapabilitiesTransformer.java:288)
	at org.geotools.xml.transform.TransformerBase$XMLReaderSupport.parse(TransformerBase.java:1026)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(Unknown Source)
	... 87 more
Caused by: java.lang.RuntimeException: Unexpected error obtaining bounding box for layer antarctic_accum_crossover_errors
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayer(GetCapabilitiesTransformer.java:866)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayerTree(GetCapabilitiesTransformer.java:781)
	... 92 more
Caused by: java.lang.NullPointerException: Unable to transform referenced envelope, crs has not yet been provided.
	at org.geotools.geometry.jts.ReferencedEnvelope.transform(ReferencedEnvelope.java:658)
	at org.geotools.geometry.jts.ReferencedEnvelope.transform(ReferencedEnvelope.java:624)
	at org.geoserver.catalog.impl.ResourceInfoImpl.boundingBox(ResourceInfoImpl.java:225)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:145)
	at com.sun.proxy.$Proxy14.boundingBox(Unknown Source)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayer(GetCapabilitiesTransformer.java:864)
	... 93 more
2014-04-28 16:04:02,829 WARN [catalog.util] - There is code not closing CloseableIterator!!! Auto closing at finalize().
2014-04-28 16:04:03,044 WARN [catalog.util] - There is code not closing CloseableIterator!!! Auto closing at finalize().
2014-04-28 16:04:08,411 WARN [geoserver.security] - Strong cryptography is NOT available
Download and install of policy files recommended
from http://www.oracle.com/technetwork/java/javase/downloads/jce-6-download-429243.html
2014-04-28 16:04:34,524 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "snow_crossover_errors.geom" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:252)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:326)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1213)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:521)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:427)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:364)
	at org.geoserver.feature.retype.RetypingFeatureSource.getBounds(RetypingFeatureSource.java:148)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:591)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:118)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
2014-04-28 16:04:35,112 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "snow_crossover_errors.geom" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:252)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:326)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1213)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:521)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:427)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:364)
	at org.geoserver.feature.retype.RetypingFeatureSource.getBounds(RetypingFeatureSource.java:148)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:591)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:118)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
2014-04-28 16:04:36,348 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "snow_crossover_errors.geom" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:252)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:326)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1213)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:521)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:427)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:364)
	at org.geoserver.feature.retype.RetypingFeatureSource.getBounds(RetypingFeatureSource.java:148)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:591)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:118)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
2014-04-28 16:04:38,189 INFO [geoserver.catalog] - Disposing feature type 'arctic_snow_crossover_errors'
2014-04-28 16:04:44,203 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "rds_crossover_errors.geom" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:252)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:326)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1213)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:521)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:427)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:364)
	at org.geoserver.feature.retype.RetypingFeatureSource.getBounds(RetypingFeatureSource.java:148)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:591)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:118)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
2014-04-28 16:04:45,554 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "rds_crossover_errors.geom" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:252)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:326)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1213)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:521)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:427)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:364)
	at org.geoserver.feature.retype.RetypingFeatureSource.getBounds(RetypingFeatureSource.java:148)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:591)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:118)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
2014-04-28 16:04:47,609 INFO [geoserver.catalog] - Disposing feature type 'arctic_rds_crossover_errors'
2014-04-28 16:04:53,736 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "accum_crossover_errors.geom" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:252)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:326)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1213)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:521)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:427)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:364)
	at org.geoserver.feature.retype.RetypingFeatureSource.getBounds(RetypingFeatureSource.java:148)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:591)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:118)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
2014-04-28 16:04:55,545 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "accum_crossover_errors.geom" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:252)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:326)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1213)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:521)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:427)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:364)
	at org.geoserver.feature.retype.RetypingFeatureSource.getBounds(RetypingFeatureSource.java:148)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:591)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:118)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
2014-04-28 16:04:56,898 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "accum_crossover_errors.geom" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:252)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:326)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1213)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:521)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:427)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:364)
	at org.geoserver.feature.retype.RetypingFeatureSource.getBounds(RetypingFeatureSource.java:148)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:591)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:118)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
2014-04-28 16:04:57,837 INFO [geoserver.catalog] - Disposing feature type 'arctic_accum_crossover_errors'
2014-04-28 16:05:04,166 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "rds_crossover_errors.geom" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:252)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:326)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1213)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:521)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:427)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:364)
	at org.geoserver.feature.retype.RetypingFeatureSource.getBounds(RetypingFeatureSource.java:148)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:591)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:118)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
2014-04-28 16:05:05,154 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "rds_crossover_errors.geom" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:252)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:326)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1213)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:521)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:427)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:364)
	at org.geoserver.feature.retype.RetypingFeatureSource.getBounds(RetypingFeatureSource.java:148)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:591)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:118)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
2014-04-28 16:05:07,091 INFO [geoserver.catalog] - Disposing feature type 'antarctic_rds_crossover_errors'
2014-04-28 16:05:13,362 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "snow_crossover_errors.geom" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:252)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:326)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1213)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:521)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:427)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:364)
	at org.geoserver.feature.retype.RetypingFeatureSource.getBounds(RetypingFeatureSource.java:148)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:591)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:118)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
2014-04-28 16:05:14,914 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "snow_crossover_errors.geom" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:252)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:326)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1213)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:521)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:427)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:364)
	at org.geoserver.feature.retype.RetypingFeatureSource.getBounds(RetypingFeatureSource.java:148)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:591)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:118)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
2014-04-28 16:05:16,598 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "snow_crossover_errors.geom" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:252)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:326)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1213)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:521)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:427)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:364)
	at org.geoserver.feature.retype.RetypingFeatureSource.getBounds(RetypingFeatureSource.java:148)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:591)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:118)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
2014-04-28 16:05:18,602 INFO [geoserver.catalog] - Disposing feature type 'antarctic_snow_crossover_errors'
2014-04-28 16:05:24,326 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "accum_crossover_errors.geom" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:252)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:326)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1213)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:521)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:427)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:364)
	at org.geoserver.feature.retype.RetypingFeatureSource.getBounds(RetypingFeatureSource.java:148)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:591)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:118)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
2014-04-28 16:05:25,696 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "accum_crossover_errors.geom" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:252)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:326)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1213)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:521)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:427)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:364)
	at org.geoserver.feature.retype.RetypingFeatureSource.getBounds(RetypingFeatureSource.java:148)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:591)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:118)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
2014-04-28 16:05:27,037 INFO [geoserver.catalog] - Disposing feature type 'antarctic_accum_crossover_errors'
2014-04-28 16:05:32,386 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "kuband_crossover_errors.geom" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:252)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:326)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1213)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:521)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:427)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:364)
	at org.geoserver.feature.retype.RetypingFeatureSource.getBounds(RetypingFeatureSource.java:148)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:591)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:118)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
2014-04-28 16:05:34,001 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "kuband_crossover_errors.geom" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:252)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:326)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1213)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:521)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:427)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:364)
	at org.geoserver.feature.retype.RetypingFeatureSource.getBounds(RetypingFeatureSource.java:148)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:591)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:118)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
2014-04-28 16:05:35,590 INFO [geoserver.catalog] - Disposing feature type 'antarctic_kuband_crossover_errors'
2014-04-28 16:05:44,232 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 16:05:44,317 INFO [geoserver.wms] - 
Request: getCapabilities
	Namespace = null
	UpdateSequence = null
	Version = 1.3.0
	Request = GetCapabilities
	Get = false
	RawKvp = {REQUEST=GetCapabilities, VERSION=1.3.0, SERVICE=WMS}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 16:05:44,624 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: javax.xml.transform.TransformerException: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: arctic_kuband_crossover_errors
	at org.geoserver.wms.capabilities.Capabilities_1_3_0_Response.write(Capabilities_1_3_0_Response.java:49)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:919)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:276)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
Caused by: javax.xml.transform.TransformerException: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: arctic_kuband_crossover_errors
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	at org.geotools.xml.transform.TransformerBase$Task.run(TransformerBase.java:300)
	at org.geotools.xml.transform.TransformerBase.transform(TransformerBase.java:133)
	at org.geotools.xml.transform.TransformerBase.transform(TransformerBase.java:112)
	at org.geoserver.wms.capabilities.Capabilities_1_3_0_Response.write(Capabilities_1_3_0_Response.java:47)
	... 81 more
Caused by: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: arctic_kuband_crossover_errors
	at org.geoserver.wms.capabilities.Capabilities_1_3_0_Transformer$Capabilities_1_3_0_Translator.doHandleLayer(Capabilities_1_3_0_Transformer.java:847)
	at org.geoserver.wms.capabilities.Capabilities_1_3_0_Transformer$Capabilities_1_3_0_Translator.handleLayerTree(Capabilities_1_3_0_Transformer.java:800)
	at org.geoserver.wms.capabilities.Capabilities_1_3_0_Transformer$Capabilities_1_3_0_Translator.handleLayers(Capabilities_1_3_0_Transformer.java:680)
	at org.geoserver.wms.capabilities.Capabilities_1_3_0_Transformer$Capabilities_1_3_0_Translator.handleCapability(Capabilities_1_3_0_Transformer.java:431)
	at org.geoserver.wms.capabilities.Capabilities_1_3_0_Transformer$Capabilities_1_3_0_Translator.encode(Capabilities_1_3_0_Transformer.java:264)
	at org.geotools.xml.transform.TransformerBase$XMLReaderSupport.parse(TransformerBase.java:1026)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(Unknown Source)
	... 87 more
Caused by: java.lang.RuntimeException: Unexpected error obtaining bounding box for layer arctic_kuband_crossover_errors
	at org.geoserver.wms.capabilities.Capabilities_1_3_0_Transformer$Capabilities_1_3_0_Translator.handleLayer(Capabilities_1_3_0_Transformer.java:911)
	at org.geoserver.wms.capabilities.Capabilities_1_3_0_Transformer$Capabilities_1_3_0_Translator.doHandleLayer(Capabilities_1_3_0_Transformer.java:840)
	... 93 more
Caused by: java.lang.NullPointerException: Unable to transform referenced envelope, crs has not yet been provided.
	at org.geotools.geometry.jts.ReferencedEnvelope.transform(ReferencedEnvelope.java:658)
	at org.geotools.geometry.jts.ReferencedEnvelope.transform(ReferencedEnvelope.java:624)
	at org.geoserver.catalog.impl.ResourceInfoImpl.boundingBox(ResourceInfoImpl.java:225)
	at sun.reflect.GeneratedMethodAccessor308.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:145)
	at com.sun.proxy.$Proxy14.boundingBox(Unknown Source)
	at org.geoserver.wms.capabilities.Capabilities_1_3_0_Transformer$Capabilities_1_3_0_Translator.handleLayer(Capabilities_1_3_0_Transformer.java:909)
	... 94 more
2014-04-28 16:05:47,291 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 16:05:47,292 INFO [geoserver.wms] - 
Request: getCapabilities
	Namespace = null
	UpdateSequence = null
	Version = 1.1.1
	Request = GetCapabilities
	Get = false
	RawKvp = {REQUEST=GetCapabilities, VERSION=1.1.1, SERVICE=WMS}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 16:05:47,371 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: javax.xml.transform.TransformerException: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: arctic_kuband_crossover_errors
	at org.geoserver.wms.capabilities.GetCapabilitiesResponse.write(GetCapabilitiesResponse.java:115)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:919)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:276)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
Caused by: javax.xml.transform.TransformerException: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: arctic_kuband_crossover_errors
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	at org.geotools.xml.transform.TransformerBase$Task.run(TransformerBase.java:300)
	at org.geotools.xml.transform.TransformerBase.transform(TransformerBase.java:133)
	at org.geotools.xml.transform.TransformerBase.transform(TransformerBase.java:112)
	at org.geoserver.wms.capabilities.GetCapabilitiesResponse.write(GetCapabilitiesResponse.java:113)
	... 81 more
Caused by: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: arctic_kuband_crossover_errors
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayerTree(GetCapabilitiesTransformer.java:792)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayers(GetCapabilitiesTransformer.java:669)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleCapability(GetCapabilitiesTransformer.java:424)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.encode(GetCapabilitiesTransformer.java:288)
	at org.geotools.xml.transform.TransformerBase$XMLReaderSupport.parse(TransformerBase.java:1026)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(Unknown Source)
	... 87 more
Caused by: java.lang.RuntimeException: Unexpected error obtaining bounding box for layer arctic_kuband_crossover_errors
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayer(GetCapabilitiesTransformer.java:866)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayerTree(GetCapabilitiesTransformer.java:781)
	... 92 more
Caused by: java.lang.NullPointerException: Unable to transform referenced envelope, crs has not yet been provided.
	at org.geotools.geometry.jts.ReferencedEnvelope.transform(ReferencedEnvelope.java:658)
	at org.geotools.geometry.jts.ReferencedEnvelope.transform(ReferencedEnvelope.java:624)
	at org.geoserver.catalog.impl.ResourceInfoImpl.boundingBox(ResourceInfoImpl.java:225)
	at sun.reflect.GeneratedMethodAccessor308.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:145)
	at com.sun.proxy.$Proxy14.boundingBox(Unknown Source)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayer(GetCapabilitiesTransformer.java:864)
	... 93 more
2014-04-28 16:05:49,709 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 16:05:49,710 INFO [geoserver.wms] - 
Request: getCapabilities
	Namespace = null
	UpdateSequence = null
	Version = 1.1.1
	Request = GetCapabilities
	Get = false
	RawKvp = {REQUEST=GetCapabilities, VERSION=1.1.0, SERVICE=WMS}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 16:05:49,766 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: javax.xml.transform.TransformerException: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: arctic_kuband_crossover_errors
	at org.geoserver.wms.capabilities.GetCapabilitiesResponse.write(GetCapabilitiesResponse.java:115)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:919)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:276)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
Caused by: javax.xml.transform.TransformerException: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: arctic_kuband_crossover_errors
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	at org.geotools.xml.transform.TransformerBase$Task.run(TransformerBase.java:300)
	at org.geotools.xml.transform.TransformerBase.transform(TransformerBase.java:133)
	at org.geotools.xml.transform.TransformerBase.transform(TransformerBase.java:112)
	at org.geoserver.wms.capabilities.GetCapabilitiesResponse.write(GetCapabilitiesResponse.java:113)
	... 81 more
Caused by: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: arctic_kuband_crossover_errors
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayerTree(GetCapabilitiesTransformer.java:792)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayers(GetCapabilitiesTransformer.java:669)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleCapability(GetCapabilitiesTransformer.java:424)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.encode(GetCapabilitiesTransformer.java:288)
	at org.geotools.xml.transform.TransformerBase$XMLReaderSupport.parse(TransformerBase.java:1026)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(Unknown Source)
	... 87 more
Caused by: java.lang.RuntimeException: Unexpected error obtaining bounding box for layer arctic_kuband_crossover_errors
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayer(GetCapabilitiesTransformer.java:866)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayerTree(GetCapabilitiesTransformer.java:781)
	... 92 more
Caused by: java.lang.NullPointerException: Unable to transform referenced envelope, crs has not yet been provided.
	at org.geotools.geometry.jts.ReferencedEnvelope.transform(ReferencedEnvelope.java:658)
	at org.geotools.geometry.jts.ReferencedEnvelope.transform(ReferencedEnvelope.java:624)
	at org.geoserver.catalog.impl.ResourceInfoImpl.boundingBox(ResourceInfoImpl.java:225)
	at sun.reflect.GeneratedMethodAccessor308.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:145)
	at com.sun.proxy.$Proxy14.boundingBox(Unknown Source)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayer(GetCapabilitiesTransformer.java:864)
	... 93 more
2014-04-28 16:05:52,099 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 16:05:52,100 INFO [geoserver.wms] - 
Request: capabilities
	Namespace = null
	UpdateSequence = null
	Version = 1.1.1
	Request = capabilities
	Get = false
	RawKvp = {REQUEST=capabilities, WMTVER=1.0.0}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 16:05:52,138 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: javax.xml.transform.TransformerException: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: arctic_kuband_crossover_errors
	at org.geoserver.wms.capabilities.GetCapabilitiesResponse.write(GetCapabilitiesResponse.java:115)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:919)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:276)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
Caused by: javax.xml.transform.TransformerException: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: arctic_kuband_crossover_errors
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	at org.geotools.xml.transform.TransformerBase$Task.run(TransformerBase.java:300)
	at org.geotools.xml.transform.TransformerBase.transform(TransformerBase.java:133)
	at org.geotools.xml.transform.TransformerBase.transform(TransformerBase.java:112)
	at org.geoserver.wms.capabilities.GetCapabilitiesResponse.write(GetCapabilitiesResponse.java:113)
	... 81 more
Caused by: org.geoserver.platform.ServiceException: Error occurred trying to write out metadata for layer: arctic_kuband_crossover_errors
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayerTree(GetCapabilitiesTransformer.java:792)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayers(GetCapabilitiesTransformer.java:669)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleCapability(GetCapabilitiesTransformer.java:424)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.encode(GetCapabilitiesTransformer.java:288)
	at org.geotools.xml.transform.TransformerBase$XMLReaderSupport.parse(TransformerBase.java:1026)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(Unknown Source)
	... 87 more
Caused by: java.lang.RuntimeException: Unexpected error obtaining bounding box for layer arctic_kuband_crossover_errors
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayer(GetCapabilitiesTransformer.java:866)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayerTree(GetCapabilitiesTransformer.java:781)
	... 92 more
Caused by: java.lang.NullPointerException: Unable to transform referenced envelope, crs has not yet been provided.
	at org.geotools.geometry.jts.ReferencedEnvelope.transform(ReferencedEnvelope.java:658)
	at org.geotools.geometry.jts.ReferencedEnvelope.transform(ReferencedEnvelope.java:624)
	at org.geoserver.catalog.impl.ResourceInfoImpl.boundingBox(ResourceInfoImpl.java:225)
	at sun.reflect.GeneratedMethodAccessor308.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:145)
	at com.sun.proxy.$Proxy14.boundingBox(Unknown Source)
	at org.geoserver.wms.capabilities.GetCapabilitiesTransformer$CapabilitiesTranslator.handleLayer(GetCapabilitiesTransformer.java:864)
	... 93 more
2014-04-28 16:06:09,561 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "kuband_crossover_errors.geom" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:252)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:326)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1213)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:521)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:427)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:364)
	at org.geoserver.feature.retype.RetypingFeatureSource.getBounds(RetypingFeatureSource.java:148)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:591)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:118)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
2014-04-28 16:06:11,041 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "kuband_crossover_errors.geom" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:252)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:326)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1213)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:521)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:427)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:364)
	at org.geoserver.feature.retype.RetypingFeatureSource.getBounds(RetypingFeatureSource.java:148)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:591)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:118)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:74)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:45)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:68)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:72)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:134)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:47)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.vfny.geoserver.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Unknown Source)
2014-04-28 16:06:13,057 INFO [geoserver.catalog] - Disposing feature type 'arctic_kuband_crossover_errors'
2014-04-28 16:06:17,811 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 16:06:17,813 INFO [geoserver.wms] - 
Request: getCapabilities
	Namespace = null
	UpdateSequence = null
	Version = 1.3.0
	Request = GetCapabilities
	Get = false
	RawKvp = {REQUEST=GetCapabilities, VERSION=1.3.0, SERVICE=WMS}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 16:07:17,776 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 16:07:18,346 INFO [geoserver.wms] - 
Request: getCapabilities
	Namespace = antarctic
	UpdateSequence = null
	Version = 1.3.0
	Request = GetCapabilities
	Get = false
	RawKvp = {REQUEST=GetCapabilities, VERSION=1.3.0, SERVICE=WMS}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
2014-04-28 16:07:27,527 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 16:07:44,711 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 481
	Width = 369
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = urn:x-ogc:def:crs:EPSG:3031
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@f173a3ae, org.geoserver.wms.MapLayerInfo@b7887acd]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / Antarctic Polar Stereographic", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["Standard_Parallel_1", -71.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "North along 90 deg East"], 
  AXIS["Northing", "North along 0 deg"], 
  AUTHORITY["EPSG","3031"]]
	Bbox = SRSEnvelope[-8221026.902364229 : 8091116.22832619, -1.0566720961955331E7 : 1.0696533362874184E7]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = [{STATUS='true', SEASON_NAME='2012_Antarctica_DC8'}, {STATUS='true', SEASON_NAME='2012_Antarctica_DC8'}]
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.3.0
	Request = GetMap
	Get = true
	RawKvp = {CRS=EPSG:3031, FORMAT=image/jpeg, BGCOLOR=0xFFFFFF, STYLES=,, WIDTH=369, HEIGHT=481, LAYERS=antarctic:antarctic_naturalearth,antarctic:antarctic_rds_line_paths, REQUEST=GetMap, BBOX=-8221026.902364229,-1.0566720961955331E7,8091116.22832619,1.0696533362874184E7, VIEWPARAMS=season_name:'2012_Antarctica_DC8';status:'true', VERSION=1.3.0, SERVICE=WMS, TRANSPARENT=FALSE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 16:07:52,086 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 16:07:59,508 WARN [catalog.util] - There is code not closing CloseableIterator!!! Auto closing at finalize().
2014-04-28 16:08:05,531 WARN [catalog.util] - There is code not closing CloseableIterator!!! Auto closing at finalize().
2014-04-28 16:08:05,974 WARN [catalog.util] - There is code not closing CloseableIterator!!! Auto closing at finalize().
2014-04-28 16:07:59,885 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 481
	Width = 369
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = urn:x-ogc:def:crs:EPSG:3031
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@f173a3ae, org.geoserver.wms.MapLayerInfo@b7887acd]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / Antarctic Polar Stereographic", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["Standard_Parallel_1", -71.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "North along 90 deg East"], 
  AXIS["Northing", "North along 0 deg"], 
  AUTHORITY["EPSG","3031"]]
	Bbox = SRSEnvelope[-2164756.9595333696 : -926979.1609985968, -984964.6606961599 : 628507.2121906307]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = [{STATUS='true', SEASON_NAME='2012_Antarctica_DC8'}, {STATUS='true', SEASON_NAME='2012_Antarctica_DC8'}]
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.3.0
	Request = GetMap
	Get = true
	RawKvp = {CRS=EPSG:3031, FORMAT=image/jpeg, BGCOLOR=0xFFFFFF, STYLES=,, WIDTH=369, HEIGHT=481, LAYERS=antarctic:antarctic_naturalearth,antarctic:antarctic_rds_line_paths, REQUEST=GetMap, BBOX=-2164756.9595333696,-984964.6606961599,-926979.1609985968,628507.2121906307, VIEWPARAMS=season_name:'2012_Antarctica_DC8';status:'true', VERSION=1.3.0, SERVICE=WMS, TRANSPARENT=FALSE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 16:08:10,198 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 16:08:11,854 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 481
	Width = 369
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = urn:x-ogc:def:crs:EPSG:3031
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@f173a3ae, org.geoserver.wms.MapLayerInfo@b7887acd]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / Antarctic Polar Stereographic", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["Standard_Parallel_1", -71.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "North along 90 deg East"], 
  AXIS["Northing", "North along 0 deg"], 
  AUTHORITY["EPSG","3031"]]
	Bbox = SRSEnvelope[-1743119.3048087812 : -1351971.2271013272, -689776.4594195745 : -179905.92994183602]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = [{STATUS='true', SEASON_NAME='2012_Antarctica_DC8'}, {STATUS='true', SEASON_NAME='2012_Antarctica_DC8'}]
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.3.0
	Request = GetMap
	Get = true
	RawKvp = {CRS=EPSG:3031, FORMAT=image/jpeg, BGCOLOR=0xFFFFFF, STYLES=,, WIDTH=369, HEIGHT=481, LAYERS=antarctic:antarctic_naturalearth,antarctic:antarctic_rds_line_paths, REQUEST=GetMap, BBOX=-1743119.3048087812,-689776.4594195745,-1351971.2271013272,-179905.92994183602, VIEWPARAMS=season_name:'2012_Antarctica_DC8';status:'true', VERSION=1.3.0, SERVICE=WMS, TRANSPARENT=FALSE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 16:08:50,292 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 16:08:52,252 INFO [geoserver.wms] - 
Request: getMap
	Filter = null
	Buffer = 0
	Format = image/jpeg
	Height = 481
	Width = 369
	Time = []
	Tiled = false
	Palette = null
	Styles = [StyleImpl[ name=raster], StyleImpl[ name=line]]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	SRS = urn:x-ogc:def:crs:EPSG:3031
	FeatureVersion = null
	Layers = [org.geoserver.wms.MapLayerInfo@f173a3ae, org.geoserver.wms.MapLayerInfo@b7887acd]
	MaxFeatures = null
	Crs = PROJCS["WGS 84 / Antarctic Polar Stereographic", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Polar Stereographic (variant B)", AUTHORITY["EPSG","9829"]], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["Standard_Parallel_1", -71.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", "North along 90 deg East"], 
  AXIS["Northing", "North along 0 deg"], 
  AUTHORITY["EPSG","3031"]]
	Bbox = SRSEnvelope[-1835196.5457415031 : -1282029.6293514562, -782110.904792243 : -61045.08695047417]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	FormatOptions = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = [{STATUS='true', SEASON_NAME='2012_Antarctica_DC8'}, {STATUS='true', SEASON_NAME='2012_Antarctica_DC8'}]
	Transparent = false
	SldBody = null
	ValidateSchema = false
	Sld = null
	SldVersion = null
	TilesOrigin = null
	Filters = null
	Exceptions = SE_XML
	Version = 1.3.0
	Request = GetMap
	Get = true
	RawKvp = {CRS=EPSG:3031, FORMAT=image/jpeg, BGCOLOR=0xFFFFFF, STYLES=,, WIDTH=369, HEIGHT=481, LAYERS=antarctic:antarctic_naturalearth,antarctic:antarctic_rds_line_paths, REQUEST=GetMap, BBOX=-1835196.5457415031,-782110.904792243,-1282029.6293514562,-61045.08695047417, VIEWPARAMS=season_name:'2012_Antarctica_DC8';status:'true', VERSION=1.3.0, SERVICE=WMS, TRANSPARENT=FALSE}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = UTF-8
2014-04-28 16:09:21,156 INFO [geoserver.wms] - 
Request: getServiceInfo
2014-04-28 16:09:21,460 INFO [geoserver.wms] - 
Request: getCapabilities
	Namespace = null
	UpdateSequence = null
	Version = 1.3.0
	Request = GetCapabilities
	Get = false
	RawKvp = {REQUEST=GetCapabilities, VERSION=1.3.0, SERVICE=WMS}
	BaseUrl = http://192.168.111.222:80/geoserver/
	RequestCharset = null
